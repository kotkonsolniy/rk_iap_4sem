DUMMY_PROTOCOL Client-Server System

Описание:
Система состоит из клиента и сервера, взаимодействующих по протоколу DUMMY_PROTOCOL.
Протокол поддерживает передачу неотрицательного числа с проверкой корректности сообщений.

Структура проекта
├── client/
│   ├── client.py          # основной клиентский код
│   ├── config.py          # конфигурация и аргументы командной строки
│   └── tests/             # тесты для клиента
├── server/
│   ├── server.py          # основной серверный код
│   ├── config.py          # конфигурация и аргументы командной строки
│   └── tests/             # тесты для сервера
├── protocol.py            # общие функции работы с протоколом
├── requirements.txt       # зависимости
└── README.txt             # ридми


Функциональные возможности:
- Поддержка UDP
- Проверка корректности сообщений
- Логирование всех событий
- Гибкая настройка через аргументы командной строки

Инструкции по развертыванию в Linux:

1. Установите Python 3.8+
2. Создайте виртуальное окружение:
   python -m venv venv
   source venv/bin/activate

3. Установите зависимости:
   pip install -r requirements.txt

4. Запуск сервера (TCP):
   python3 -m server.server --host 127.0.0.1 --port 12335 --protocol udp

5. Запуск клиента (TCP):
   python3 -m client.client --host 127.0.0.1 --port 12335 --protocol udp --number 42

Тестирование:
- Запуск тестов сервера:
  python3 -m server.tests.test_server

- Запуск тестов клиента:
  python3 -m client.tests.test_client

Требования:
- Python 3.8+

Ответ на вопрос: "На каком уровне модели ЭМВОС находится протокол DUMMY_PROTOCOL и почему?"
1) Протокол DUMMY_PROTOCOL работает поверх TCP/UDP
2) Фактически это протокол, который определяет как должно быть сформировано сообщение
3) Он не занимается маршрутизацией или транспортировкой. Он описывает поля и их формат (структуру прикладных данных)

Исходя из выше написанного могу сделать вывод, что он реализуется на прикладном уровне, так как определяет структуру и смысл данных.

https://github.com/kotkonsolniy/rk_iap_4sem